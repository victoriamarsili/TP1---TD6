plot(datos$tiempo, datos$poorcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
modelo <- lm(porcentaje ~ tiempo, data = datos)
summary(modelo)
beta0 <- modelo$coefficients[1]
beta1 <- modelo$coefficients[2]
abline(beta0, beta1, col = 'purple', lwd = 2)
datos <- datos_DNI_45963658
plot(datos$tiempo, datos$poorcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
modelo <- lm(porcentaje ~ tiempo, data = datos)
summary(modelo)
beta0 <- modelo$coefficients[1]
beta1 <- modelo$coefficients[2]
abline(beta0, beta1, col = 'purple', lwd = 2)
grilla_t <- seq(0.175, 0.1)
grilla_y <- beta0 + grilla_t * beta1
points(grilla_t, grilla_y, type = 'l', col = 'red')
grilla_t <- seq(0.175, 0.1)
grilla_y <- beta0 + grilla_t * beta1
points(grilla_t, grilla_y, type = 'l', col = 'red', lwd = 2)
datos <- datos_DNI_45963658
plot(datos$tiempo, datos$poorcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
modelo <- lm(porcentaje ~ tiempo, data = datos)
summary(modelo)
beta0 <- modelo$coefficients[1]
beta1 <- modelo$coefficients[2]
abline(beta0, beta1, col = 'purple', lwd = 2)
grilla_t <- seq(0.175, 0.1)
grilla_y <- beta0 + grilla_t * beta1
lines(grilla_t, grilla_y, col = 'red', lwd = 2)
datos <- datos_DNI_45963658
datos_DNI_45963658 <- read.csv("C:/Users/maria/Downloads/datos_DNI_45963658.txt", sep="")
View(datos_DNI_45963658)
datos <- datos_DNI_45963658
plot(datos$tiempo, datos$porcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
modelo <- lm(porcentaje ~ tiempo, data = datos)
summary(modelo)
beta0 <- modelo$coefficients[1]
beta1 <- modelo$coefficients[2]
abline(beta0, beta1, col = 'purple', lwd = 2)
grilla_t <- seq(0.175, 0.1)
grilla_y <- beta0 + grilla_t * beta1
lines(grilla_t, grilla_y, col = 'red', lwd = 2)
datos <- datos_DNI_45963658
plot(datos$tiempo, datos$porcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
modelo <- lm(porcentaje ~ tiempo, data = datos)
summary(modelo)
beta0 <- modelo$coefficients[1]
beta1 <- modelo$coefficients[2]
abline(beta0, beta1, col = 'purple', lwd = 2)
grilla_t <- seq(0.175, 0.1)
grilla_y <- beta0 + grilla_t * beta1
lines(grilla_t, grilla_y, col = 'red', lwd = 2)
datos <- datos_DNI_45963658
plot(datos$tiempo, datos$porcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
modelo <- lm(porcentaje ~ tiempo, data = datos)
summary(modelo)
beta0 <- modelo$coefficients[1]
beta1 <- modelo$coefficients[2]
abline(beta0, beta1, col = 'purple', lwd = 2)
grilla_t <- seq(0.175, 0.1)
grilla_y <- beta0 + grilla_t * beta1
lines(grilla_t, grilla_y, col = 'red', lwd = 2)
datos <- datos_DNI_45963658
plot(datos$tiempo, datos$porcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
modelo <- lm(porcentaje ~ tiempo, data = datos)
summary(modelo)
beta0 <- modelo$coefficients[1]
beta1 <- modelo$coefficients[2]
#abline(beta0, beta1, col = 'purple', lwd = 2)
grilla_t <- seq(0.175, 0.1)
grilla_y <- beta0 + grilla_t * beta1
lines(grilla_t, grilla_y, col = 'red', lwd = 2)
datos <- datos_DNI_45963658
plot(datos$tiempo, datos$porcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
modelo <- lm(porcentaje ~ tiempo, data = datos)
summary(modelo)
beta0 <- modelo$coefficients[1]
beta1 <- modelo$coefficients[2]
abline(beta0, beta1, col = 'purple', lwd = 2)
grilla_t <- seq(0.175, 0.1)
grilla_y <- beta0 + grilla_t * beta1
lines(grilla_t, grilla_y, col = 'red', lwd = 2)
y50
y50 <- beta0 + beta1 * 50
y50
points(50, 50, col = 'red', pch = 19)
datos <- datos_DNI_45963658
plot(datos$tiempo, datos$porcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
modelo <- lm(porcentaje ~ tiempo, data = datos)
summary(modelo)
beta0 <- modelo$coefficients[1]
beta1 <- modelo$coefficients[2]
grilla_t <- seq(0.175, 0.1)
grilla_y <- beta0 + grilla_t * beta1
lines(grilla_t, grilla_y, col = 'red', lwd = 2)
y50 <- beta0 + beta1 * 50
points(50, 50, col = 'red', pch = 19)
datos <- datos_DNI_45963658
plot(datos$tiempo, datos$porcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
modelo <- lm(porcentaje ~ tiempo, data = datos)
summary(modelo)
beta0 <- modelo$coefficients[1]
beta1 <- modelo$coefficients[2]
abline(beta0, beta1, col = 'purple', lwd = 2)
grilla_t <- seq(0.175, 0.1)
grilla_y <- beta0 + grilla_t * beta1
lines(grilla_t, grilla_y, col = 'red', lwd = 2)
y50 <- beta0 + beta1 * 50
points(50, 50, col = 'red', pch = 19)
plot(datos$tiempo, datos$porcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
lines(grilla_t, grilla_y, col = 'red', lwd = 2)
plot(datos$tiempo, datos$porcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
lines(grilla_t, grilla_y, col = 'red', lwd = 2)
grilla_t <- seq(0, 175, 0.1)
grilla_t
grilla_y <- beta0 + grilla_t * beta1
grilla_y
lines(grilla_t, grilla_y, col = 'red', lwd = 2)
points(50, 50, col = 'blue', pch = 19)
points(50, y50, col = 'blue', pch = 19)
datos <- datos_DNI_45963658
plot(datos$tiempo, datos$porcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
modelo <- lm(porcentaje ~ tiempo, data = datos)
summary(modelo)
beta0 <- modelo$coefficients[1]
beta1 <- modelo$coefficients[2]
abline(beta0, beta1, col = 'purple', lwd = 2)
grilla_t <- seq(0, 175, 0.1)
grilla_y <- beta0 + grilla_t * beta1
lines(grilla_t, grilla_y, col = 'red', lwd = 2)
y50 <- beta0 + beta1 * 50
points(50, y50, col = 'blue', pch = 19)
datos <- datos_DNI_45963658
plot(datos$tiempo, datos$porcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
modelo <- lm(porcentaje ~ tiempo, data = datos)
summary(modelo)
beta0 <- modelo$coefficients[1]
beta1 <- modelo$coefficients[2]
abline(beta0, beta1, col = 'purple', lwd = 2)
grilla_t <- seq(0, 200, 0.1)
grilla_y <- beta0 + grilla_t * beta1
lines(grilla_t, grilla_y, col = 'red', lwd = 2)
y50 <- beta0 + beta1 * 50
points(50, y50, col = 'blue', pch = 19)
y100 <- beta0 + beta1 * 100
points(100, y100, col = 'green', pch = 19)
y200 <- beta0 + beta1 * 200
points(200, y200, col = 'orange', pch = 19)
datos <- datos_DNI_45963658
plot(datos$tiempo, datos$porcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura", xlim = 250)
datos <- datos_DNI_45963658
plot(datos$tiempo, datos$porcentaje, xlab = "Tiempo de permanencia", ylab = "Porcentaje de lectura")
modelo <- lm(porcentaje ~ tiempo, data = datos)
summary(modelo)
beta0 <- modelo$coefficients[1]
beta1 <- modelo$coefficients[2]
abline(beta0, beta1, col = 'purple', lwd = 2)
grilla_t <- seq(0, 200, 0.1)
grilla_y <- beta0 + grilla_t * beta1
lines(grilla_t, grilla_y, col = 'red', lwd = 2)
y50 <- beta0 + beta1 * 50
points(50, y50, col = 'blue', pch = 19)
y100 <- beta0 + beta1 * 100
points(100, y100, col = 'green', pch = 19)
y200 <- beta0 + beta1 * 200
points(200, y200, col = 'orange', pch = 19)
muestra <- read.csv("C:/Users/maria/Downloads/datos_DNI_658 (3).txt", sep="")
View(muestra)
datos_ritmo <- read.csv("C:/Users/maria/Downloads/datos_ritmo.csv")
View(datos_ritmo)
summary(modelo)
datos <- datos_ritmo
modelo <- lm(datos$dosis, data = datos)
datos <- datos_ritmo
ajuste_dosis <- lm(ritmo ~ dosis, data = datos)
summary(ajuste_dosis)
TSS <- sum((datos$ritmo-mean(datos$ritmo))^2)
TSS
precios <- read.csv("C:/Users/maria/Downloads/precios.csv")
View(precios)
datos <- precios
plot(x = datos$metros, y = datos$precio)
plot(x = datos$metros, y = datos$expensas)
plot(x = datos$expensas, y = datos$precio)
ajusteExpensas <- lm(precio ~ expensas, data = datos)
ajusteExpensas <- lm(precio ~ expensas, data = datos)
ajusteExpensas
View(ajusteExpensas)
ajusteExpensas
ajusteExpensas <- lm(expensas ~ precio, data = datos)
ajusteExpensas
plot(x = datos$metros, y = datos$expensas)
plot(x = datos$metros, y = datos$precio)
plot(x = datos$metros, y = datos$expensas)
plot(x = datos$expensas, y = datos$precio)
plot(x = datos$metros, y = datos$expensas)
summary(ajusteExpensas)
datos <- precios
plot(x = datos$metros, y = datos$precio)
plot(x = datos$metros, y = datos$expensas)
plot(x = datos$expensas, y = datos$precio)
ajusteExpensas <- lm(precio ~ expensas, data = datos)
summary(ajusteExpensas)
summmary(ajusteMultiple)
summary(ajusteMultiple)
ajusteMultiple <- lm(precio ~ expensas + metros, data = datos)
summary(ajusteMultiple)
qnorm(0,995)
qnorm(0,99)
qnorm(0,975)
pnorm(2,34)
pnorm(2,3)
pnorm(1,83)
qnorm(0,9664)
1-pt(1.76, 14)
1-pt(1.549, 14)
1-pnorm(2,35)
pnorm(-0.47)
install.packages(‘‘ISLR2’’)
install.packages(ISLR2)
install.packages('ISLR2')
library(ISLR2)
library(ISLR2)
library(ISLR2)
CarbonDioxide <- read.delim("C:/Users/maria/Downloads/CarbonDioxide.txt", header=FALSE)
View(CarbonDioxide)
#b)
plot(datos)
############## GUIA 6 ##############
datos = CarbonDioxide
#EJERCICIO 1
#a) Variable explicativa: año
# Variable de respuesta: nivel de dioxido de carbono en la atmosfera (en ppm)
#b)
plot(datos)
modelo <- lm(C02 ~ Year)
modelo <- lm(V2 ~ V1)
View(Caravan)
View(CarbonDioxide)
modelo <- lm(V2 ~ V1, data = datos)
modelo <- lm(V2 ~ V1, data = datos)
datos <-  CarbonDioxide
#EJERCICIO 1
#a) Variable explicativa: año
# Variable de respuesta: nivel de dioxido de carbono en la atmosfera (en ppm)
#b)
plot(datos)
#si parece haber una relacion lineal
#c)
modelo <- lm(V2 ~ V1, data = datos)
modelo <- lm(C02 ~ Year, data = datos)
modelo <- lm(V1 ~ V2, data = datos)
modelo <- lm(V2 ~ V1, data = datos)
modelo <- lm(V2 ~ V1, data = CarbonDioxide)
set.seed(1)
x <- rnorm(100,0,1)
eps <- rnorm(100,0,0.25)
y <- -1 + 0.5 * x + eps
plot(x,y)
# Calcular las medias
mean_x <- mean(x)
mean_y <- mean(y)
# Calcular los numeradores y denominadores
numerator <- sum((x - mean_x) * (y - mean_y))
denominator <- sum((x - mean_x)^2)
# Calcular los coeficientes de la recta de mínimos cuadrados
beta1_hat <- numerator / denominator
beta0_hat <- mean_y - beta1_hat * mean_x
# Imprimir los resultados
cat("Coeficiente beta0 estimado:", beta0_hat, "\n")
cat("Coeficiente beta1 estimado:", beta1_hat, "\n")
modelo_lineal <- lm(y~x)
summary
modelo_lineal <- lm(y~x)
summary(modelo_lineal)
abline(modelo_lineal, col = "red")
abline(a = beta0_hat, b = beta1_hat, col = "blue", lty = 3)
abline(a = -1, b = 0.5, col = "blue", lty = 3)
plot(x,y)
abline(modelo_lineal, col = "red")
abline(a = -1, b = 0.5, col = "blue", lty = 3)
legend("topright", legend = c("Recta de Regresión", "Recta de Mínimos Cuadrados"),
col = c("blue", "red"), lty = c(2, 3))
set.seed(2)
w <- rnorm(100,0,1)
errores <- rnorm(100,0,32)
z <- -1 + 0.5 * x + eps
plot(w,z)
mean_w <- mean(w)
mean_z <- mean(z)
modelo_lineal_2 <- lm(z~w)
summary(modelo_lineal_2)
abline(modelo_lineal_2, col = "orange")
abline(a = -1, b = 0.5, col = "green", lty = 3)
set.seed(2)
w <- rnorm(100,0,1)
errores <- rnorm(100,0,10)
z <- -1 + 0.5 * x + eps
plot(w,z)
mean_w <- mean(w)
mean_z <- mean(z)
modelo_lineal_2 <- lm(z~w)
summary(modelo_lineal_2)
abline(modelo_lineal_2, col = "orange")
abline(a = -1, b = 0.5, col = "green", lty = 3)
set.seed(2)
w <- rnorm(100,0,1)
errores <- rnorm(100,0,1)
z <- -1 + 0.5 * x + eps
plot(w,z)
mean_w <- mean(w)
mean_z <- mean(z)
modelo_lineal_2 <- lm(z~w)
summary(modelo_lineal_2)
abline(modelo_lineal_2, col = "orange")
abline(a = -1, b = 0.5, col = "green", lty = 3)
set.seed(2)
w <- rnorm(100,0,1)
errores <- rnorm(100,0,0.6)
z <- -1 + 0.5 * x + eps
plot(w,z)
mean_w <- mean(w)
mean_z <- mean(z)
modelo_lineal_2 <- lm(z~w)
summary(modelo_lineal_2)
abline(modelo_lineal_2, col = "orange")
abline(a = -1, b = 0.5, col = "green", lty = 3)
set.seed(2)
w <- rnorm(100,0,1)
errores <- rnorm(100,0,32)
z <- -1 + 0.5 * x + errores
plot(w,z)
mean_w <- mean(w)
mean_z <- mean(z)
modelo_lineal_2 <- lm(z~w)
summary(modelo_lineal_2)
abline(modelo_lineal_2, col = "orange")
abline(a = -1, b = 0.5, col = "green", lty = 3)
2-2*pt(2.36, 116)
library(ISLR2)
data("Auto")
modelo_lineal <- lm(mpg~horsepower, data = Auto)
summary(modelo_lineal)
plot(x = Auto$horsepower, y = Auto$mpg)
abline(modelo_lineal, col = "red")
confint(modelo_lineal, level = 0.99)
promedio_mpg <- (sum(Auto$mpg))/392
TSS <- sum((Auto$mpg-promedio_mpg)**2)
TSS
cor(x = Auto$horsepower, y = Auto$mpg)
View(Auto)
library(ISLR2)
data("Auto")
modelo_lineal <- lm(mpg~cylindres+displacement+horsepower+weight+acceleration+year, data = Auto)
library(ISLR2)
data("Auto")
modelo_lineal <- lm(mpg~cylinders+displacement+horsepower+weight+acceleration+year, data = Auto)
summary(modelo_lineal)
plot(x = Auto$horsepower, y = Auto$mpg)
abline(modelo_lineal, col = "red")
confint(modelo_lineal, level = 0.99)
promedio_mpg <- (sum(Auto$mpg))/392
TSS <- sum((Auto$mpg-promedio_mpg)**2)
TSS
cor(x = Auto$horsepower, y = Auto$mpg)
library(ISLR2)
force(Carseats)
View(Carseats)
datos = Carseats
View(datos)
?Carseats
ajuste_multiple <- lm(Sales~Income+Advertising+Price+Population+Age, data = datos)
summary(ajuste_multiple)
modelo_ajustado <- lm(Sales~Income+Advertising+Price+Age, data = datos)
summary(modelo_ajustado)
summary(ajuste_multiple)
summary(modelo_ajustado)
summary(ajuste_multiple)
summary(modelo_ajustado)
confint(modelo_ajustado, level = 0.95)
NutritionStudy <- read.delim("C:/Users/maria/Downloads/NutritionStudy.txt")
View(NutritionStudy)
ajuste_multiple <- lm(Calories~Fat+Cholesterol+Age, data = NutritionStudy)
summary(ajuste_multiple)
View(NutritionStudy)
plot(ajuste_multiple)
residuos <- residuals(ajuste_multiple)
residuos[5]
residuos
RSS <- sum((residuos)**2)
TSS <- sum((NutritionStudy$Calories-(mean(NutritionStudy$Calories)))**2)
R_cuadrado <- (TSS-RSS)/TSS
#fi)
confint(ajuste_multiple, level = 0.95)
challenger <- read.csv("C:/Users/maria/Downloads/challenger.txt", sep="")
View(challenger)
cantidad_defectos <- sum(challenger$defecto = 1)
cantidad_defectos <- sum(challenger$defecto)
cantidad_defectos
cantidad_exitos <- 23 - cantidad_defectos
cantidad_exitos
modelo_logistico <- glm(defecto~temp, data = challenger, family = binomial)
summary(modelo_logistico)
plot(modelo_logistico)
plot(x = challenger$temp, y = challenger$defecto)
boxplot(x = challenger$defecto, y = challenger$temp)
cantidad_defectos <- sum(challenger$defecto == 1)
cantidad_exitos <- sum(challenger$defecto == 0)
modelo_logistico <- glm(defecto~temp, data = challenger, family = binomial)
summary(modelo_logistico)
plot(data$temp, data$defecto, xlab = "Temperatura (Fahrenheit)", ylab = "Defecto", main = "Relación entre Temperatura y Defectos", pch = 19)
cantidad_defectos <- sum(challenger$defecto == 1)
cantidad_exitos <- sum(challenger$defecto == 0)
modelo_logistico <- glm(defecto~temp, data = challenger, family = binomial)
summary(modelo_logistico)
plot(challenger$temp, challenger$defecto, xlab = "Temperatura (Fahrenheit)", ylab = "Defecto", main = "Relación entre Temperatura y Defectos", pch = 19)
# ii. Boxplots paralelos de temperatura en cada nivel de la variable defecto
boxplot(temp ~ defecto, data = challenger, xlab = "Defecto", ylab = "Temperatura", main = "Boxplot de Temperatura según Defecto")
modelo_logistico <- glm(defecto~temp, data = challenger, family = binomial)
summary(modelo_logistico)
nuevas_temperaturas <- seq(50, 85, by = 1)
# Predecir las probabilidades con el modelo ajustado
probabilidades_estimadas <- predict(modelo_logistico, newdata = data.frame(temp = nuevas_temperaturas), type = "response")
# Añadir la curva del modelo ajustado
lines(nuevas_temperaturas, probabilidades_estimadas, col = "red", type = "l", lwd = 2)
# Leyenda
legend("topright", legend = c("Datos", "Modelo Ajustado"), col = c("black", "red"), lty = c(0, 1), lwd = c(1, 2))
nuevas_temperaturas <- seq(50, 85, by = 1)
# Predecir las probabilidades con el modelo ajustado
probabilidades_estimadas <- predict(modelo_logistico, newdata = data.frame(temp = nuevas_temperaturas), type = "response")
# Añadir la curva del modelo ajustado
lines(nuevas_temperaturas, probabilidades_estimadas, col = "red", type = "l", lwd = 2)
# Leyenda
legend("topright", legend = c("Datos", "Modelo Ajustado"), col = c("black", "red"), lty = c(0, 1), lwd = c(1, 2))
# Calcular la probabilidad estimada de defecto para 73°F utilizando predict()
temperatura_nueva <- data.frame(temp = 73)
probabilidad_estimada <- predict(modelo_logistico, newdata = temperatura_nueva, type = "response")
# Imprimir la probabilidad estimada
cat("Probabilidad estimada de defecto para 73°F:", probabilidad_estimada, "\n")
library(ISLR2)
datos = Carseats
ajuste_multiple <- lm(Sales~Income+Advertising+Price+Population+Age, data = datos)
summary(ajuste_multiple)
#b) Todos menos Population
#c)
modelo_ajustado <- lm(Sales~Income+Advertising+Price+Age, data = datos)
summary(modelo_ajustado)
confint(modelo_ajustado, level = 0.95)
choque <- read.csv("C:/Users/maria/Downloads/choque.txt", sep="")
View(choque)
plot(x = choque$vel, y = choque$choca)
boxplot(choque$vel~choque$choca, data = choque)
ajuste_logistico <- glm(choque~vel, data = choque, family = binomial)
ajuste_logistico <- glm(choqua~vel, data = choque, family = binomial)
ajuste_logistico <- glm(choca~vel, data = choque, family = binomial)
summary(ajuste_logistico)
ajuste_logistico <- glm(choca~vel, data = choque, family = binomial)
summary(ajuste_logistico)
# Superponer la curva del modelo ajustado (expit)
curva_ajustada <- function(x) {
expit <- 1 / (1 + exp(-predict(ajuste_logistico, newdata = data.frame(vel = x), type = "link")))
return(expit)
}
# Crear una secuencia de velocidades para la curva ajustada
velocidades_secuencia <- seq(min(choque$vel), max(choque$vel), length.out = 100)
# Dibujar la curva ajustada
lines(velocidades_secuencia, curva_ajustada(velocidades_secuencia), col = "red", lwd = 2)
# Leyenda
legend("topright", legend = c("Datos", "Curva Ajustada"), col = c("black", "red"), lty = c(0, 1), lwd = c(1, 2))
plot(x = choque$vel, y = choque$choca)
boxplot(choque$vel~choque$choca, data = choque)
ajuste_logistico <- glm(choca~vel, data = choque, family = binomial)
summary(ajuste_logistico)
# Superponer la curva del modelo ajustado (expit)
curva_ajustada <- function(x) {
expit <- 1 / (1 + exp(-predict(ajuste_logistico, newdata = data.frame(vel = x), type = "link")))
return(expit)
}
# Crear una secuencia de velocidades para la curva ajustada
velocidades_secuencia <- seq(min(choque$vel), max(choque$vel), length.out = 100)
# Dibujar la curva ajustada
lines(velocidades_secuencia, curva_ajustada(velocidades_secuencia), col = "red", lwd = 2)
# Dibujar la curva ajustada
lines(velocidades_secuencia, curva_ajustada(velocidades_secuencia), col = "red", lwd = 2)
confint(ajuste_logistico, level = 0.90)
plot(x = choque$vel, y = choque$choca)
boxplot(choque$vel~choque$choca, data = choque)
ajuste_logistico <- glm(choca~vel, data = choque, family = binomial)
summary(ajuste_logistico)
# Superponer la curva del modelo ajustado (expit)
curva_ajustada <- function(x) {
expit <- 1 / (1 + exp(-predict(ajuste_logistico, newdata = data.frame(vel = x), type = "link")))
return(expit)
}
# Crear una secuencia de velocidades para la curva ajustada
velocidades_secuencia <- seq(min(choque$vel), max(choque$vel), length.out = 100)
# Dibujar la curva ajustada
lines(velocidades_secuencia, curva_ajustada(velocidades_secuencia), col = "red", lwd = 2)
#d) a nivel 1% y 5% puedo afirmar que hay relacion
confint(ajuste_logistico, level = 0.90)
spotify_data <- read.csv("C:/Users/maria/OneDrive/Escritorio/TP1---TD6/spotify_data.csv")
View(spotify_data)
setwd("C:/Users/maria/OneDrive/Escritorio/TP1---TD6")
install.packages("spotify_data") # Descomentar si no lo tienen ya instalado.
library(spotify_data)
datos = read.csv("spotify_data")
datos = read.csv("spotify_data.csv")
View(datos)
plot(datos)
hist(datos$popularity)
hist(datos$popularity)
mean(datos$popularity)
